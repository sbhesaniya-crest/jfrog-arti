name: Build and Tag Docker Image

on:
  push:
    branches:
      - main
      
jobs:
  build-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.ARTIFACTORY_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Create Buildx Builder
        run: |
          docker buildx create --use --name mybuilder
          docker buildx inspect --bootstrap
          
      - name: Build and push Docker Image 1 (with OCI Label)
        env:
          IMAGE_NAME: trialf4cn04.jfrog.io/docker-test-docker/image1:${{ github.run_number }}
        run: |
          jf docker build -t $IMAGE_NAME --label 'org.opencontainers.image.source="https://github.com/${{ github.repository }}"' .
          jf docker push $IMAGE_NAME

      - name: Build Docker Image 2
        env:
          IMAGE_NAME1: trialf4cn04.jfrog.io/docker-test-docker/image2:${{ github.run_number }}
        run: |
          jf docker buildx build --provenance=true -t $IMAGE_NAME1 -f Dockerfile .
      
      - name: Push Docker Image 2
        env:
          IMAGE_NAME1: trialf4cn04.jfrog.io/docker-test-docker/image2:${{ github.run_number }}
        run: |
          jf docker push $IMAGE_NAME1
          
      - name: Publish Build info With JFrog CLI
        env:
          # Generated and maintained by GitHub
          JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
          # JFrog organization secret
          JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
        run: |
          # Export the build name and build nuber
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
